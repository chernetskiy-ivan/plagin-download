{"version":3,"sources":["upload.js","app.js"],"names":["bytesToSize","bytes","sizes","i","parseInt","Math","floor","log","round","pow","element","tag","classes","content","node","document","createElement","length","classList","add","textContent","noop","upload","selector","options","files","onUpload","input","querySelector","preview","open","style","display","multi","setAttribute","accept","Array","isArray","join","insertAdjacentElement","triggerInput","click","changeHandler","event","target","from","innerHTML","forEach","file","type","match","reader","FileReader","onload","src","result","insertAdjacentHTML","name","size","readAsDataURL","removeHandler","dataset","filter","block","closest","setTimeout","remove","clearBlock","el","bottom","uploadHandler","querySelectorAll","e","previewInfo","addEventListener","console"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["function bytesToSize(bytes) {\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\r\n    if (bytes == 0) return '0 Byte'\r\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)))\r\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i]\r\n}\r\n\r\nconst element = (tag, classes = [],content) => {\r\n    const node = document.createElement(tag)\r\n\r\n    if(classes.length) {\r\n        node.classList.add(...classes)\r\n    }\r\n\r\n    if(content) {\r\n        node.textContent = content\r\n    }\r\n\r\n    return node\r\n}\r\n\r\nfunction noop() {}\r\n\r\nexport function upload(selector, options = {}) {\r\n    let files = []\r\n    const onUpload = options.onUpload ?? noop\r\n    const input = document.querySelector(selector)\r\n    const preview = element('div',['preview'])\r\n    const open = element('button', ['btn'], 'Открыть')\r\n    const upload = element('button', ['btn','primary'], 'Загрузить')\r\n    //по умолчанию не видна\r\n    upload.style.display = 'none'\r\n\r\n    if(options.multi) {\r\n        input.setAttribute('multiple', true)\r\n    }\r\n\r\n    if(options.accept && Array.isArray(options.accept)) {\r\n        //значение данного атрибута строка через запятую\r\n        input.setAttribute('accept', options.accept.join(','))\r\n    }\r\n\r\n    input.insertAdjacentElement('afterend', preview)\r\n    input.insertAdjacentElement('afterend', upload)\r\n    input.insertAdjacentElement('afterend', open)\r\n\r\n    const triggerInput = () => input.click()\r\n    const changeHandler = event => {\r\n        //если не выбрали ни одного файла\r\n        if(event.target.files.length === 0){\r\n            return\r\n        }\r\n\r\n        files = Array.from(event.target.files)\r\n        //ES6 const {files} = event.target и что ВАЖНО FILES НЕ ЯВЛЯЕТСЯ МАССИВОМ НО МЕТОД FROM()\r\n        //ГЛОБАЛЬНОГО КЛАССА ARRAY ПРИВОДИТ FILES К МАССИВУ\r\n        preview.innerHTML = ''\r\n        upload.style.display = 'inline'\r\n        files.forEach(file => {\r\n            if(!file.type.match('image')) {\r\n                return\r\n            }\r\n\r\n            const reader = new FileReader()\r\n\r\n            reader.onload = event => {\r\n                const src = event.target.result\r\n                preview.insertAdjacentHTML('afterbegin', `\r\n                <div class=\"preview-image\">\r\n                    <div class=\"preview-remove\" data-name=\"${file.name}\">&times;</div>\r\n                    <img src=\"${src}\" alt=\"${file.name}\"/>\r\n                    <div class=\"preview-info\">\r\n                        <span>${file.name}</span>\r\n                        ${bytesToSize(file.size)}\r\n                    </div>\r\n                </div>\r\n                `)\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n\r\n    }\r\n\r\n    const removeHandler = event => {\r\n        if(!event.target.dataset.name) {\r\n          return\r\n        }\r\n\r\n        const name = event.target.dataset.name\r\n        files = files.filter(file => file.name !== name)\r\n\r\n        if(!files.length) {\r\n            upload.style.display = 'none'\r\n        }\r\n\r\n        const block = document.querySelector(`[data-name=\"${name}\"]`).closest('.preview-image')\r\n        block.classList.add('removing')\r\n        setTimeout( () => block.remove(), 300)\r\n    }\r\n\r\n    const clearBlock = el => {\r\n        //чтобы строка состояния уже стояла на месте(внизу)\r\n        el.style.bottom = '0px'\r\n        el.innerHTML = '<div class=\"preview-info-progress\"></div>'\r\n    }\r\n\r\n    const uploadHandler = () => {\r\n        preview.querySelectorAll('.preview-remove').forEach(e => e.remove())\r\n        const previewInfo = preview.querySelectorAll('.preview-info')\r\n        previewInfo.forEach(clearBlock)\r\n        onUpload(files)\r\n    }\r\n\r\n    open.addEventListener('click', triggerInput)\r\n    input.addEventListener('change', changeHandler)\r\n    preview.addEventListener('click', removeHandler)\r\n    upload.addEventListener('click', uploadHandler)\r\n}","import {upload} from './upload.js'\r\n\r\nupload('#file', {\r\n    multi: true,\r\n    accept: ['.png', '.jpg', '.jpeg', '.gif'],\r\n    onUpload(files) {\r\n        console.log('files', files)\r\n    }\r\n})"]}